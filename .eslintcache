[{"/home/levin/Documents/Entwicklung/hello-world/src/index.js":"1","/home/levin/Documents/Entwicklung/hello-world/src/App.js":"2","/home/levin/Documents/Entwicklung/hello-world/src/Components/Navbar.js":"3","/home/levin/Documents/Entwicklung/hello-world/src/Welcome.js":"4","/home/levin/Documents/Entwicklung/hello-world/src/Components/pages/Home.js":"5","/home/levin/Documents/Entwicklung/hello-world/src/WelcomeItem.js":"6","/home/levin/Documents/Entwicklung/hello-world/src/Components/pages/AboutMe.js":"7","/home/levin/Documents/Entwicklung/hello-world/src/Components/pages/Projects.js":"8","/home/levin/Documents/Entwicklung/hello-world/src/Components/pages/Fahrtkostenrechner.js":"9"},{"size":173,"mtime":1616768948043,"results":"10","hashOfConfig":"11"},{"size":844,"mtime":1616772439345,"results":"12","hashOfConfig":"11"},{"size":1931,"mtime":1616854749937,"results":"13","hashOfConfig":"11"},{"size":1662,"mtime":1617124713927,"results":"14","hashOfConfig":"11"},{"size":259,"mtime":1616840518886,"results":"15","hashOfConfig":"11"},{"size":594,"mtime":1613246216484,"results":"16","hashOfConfig":"11"},{"size":7328,"mtime":1617176294559,"results":"17","hashOfConfig":"11"},{"size":3496,"mtime":1617123913533,"results":"18","hashOfConfig":"11"},{"size":6969,"mtime":1616854684302,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wwsf0w",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/home/levin/Documents/Entwicklung/hello-world/src/index.js",[],"/home/levin/Documents/Entwicklung/hello-world/src/App.js",[],"/home/levin/Documents/Entwicklung/hello-world/src/Components/Navbar.js",[],"/home/levin/Documents/Entwicklung/hello-world/src/Welcome.js",[],"/home/levin/Documents/Entwicklung/hello-world/src/Components/pages/Home.js",[],"/home/levin/Documents/Entwicklung/hello-world/src/WelcomeItem.js",[],"/home/levin/Documents/Entwicklung/hello-world/src/Components/pages/AboutMe.js",["41"],"import React from 'react'\nimport '/home/levin/Documents/Entwicklung/hello-world/src/AboutMe.css';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport pic1 from '/home/levin/Documents/Entwicklung/hello-world/src/Bewerbungsfoto.png';\nimport pic2 from '/home/levin/Documents/Entwicklung/hello-world/src/Edu.jpg';\nimport pic3 from '/home/levin/Documents/Entwicklung/hello-world/src/dev.png'\nimport pic4 from '/home/levin/Documents/Entwicklung/hello-world/src/work.jpg';\n\nconst useStylesInt = makeStyles({\n    rootInt: {\n      maxWidth: 345,\n    },\n    mediaInt: {\n      height: 480,\n    },\n  });\n  \n\nconst useStylesEdu = makeStyles({\n  rootEdu: {\n    maxWidth: 600,\n  },\n  mediaEdu: {\n    height: 150,\n  },\n});\n\nconst useStylesProj = makeStyles({\n  rootProj: {\n    maxWidth: 600,\n  },\n  mediaProj: {\n    height: 200,\n  },\n});\n\nconst useStylesCom = makeStyles({\n  rootCom: {\n    maxWidth: 600,\n  },\n  mediaCom: {\n    height: 150,\n  },\n});\n\nconst openInNewTab = (url) => {\n  const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\n  if (newWindow) newWindow.opener = null\n}\n\n  export default function MediaCard() {\n    const classesInt = useStylesInt();\n    const classesEdu = useStylesEdu();\n    const classesProj = useStylesProj();\n    const classesCom = useStylesCom();\n  \n    return (\n        <>\n        <div className='cardInt'>\n      <Card className={classesInt.rootInt}>\n        <CardActionArea>\n          <CardMedia\n            className={classesInt.mediaInt}\n            image={pic1}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Levin Gorgs\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              <ul className='auflistung'>\n                  <ul><b>Aktuell</b></ul>\n                  <li>Masterstudent @ Universität Mannheim</li>\n                  <li>Entwicklung iRserve Android Anwendung</li>\n                  <br></br>\n                  <ul><b>Softwareentwicklung</b></ul>\n                  <li>Java Entwicklung</li>\n                  <li>Node.js Entwicklung</li>\n                  <li>React Native Anwendungsentwicklung</li>\n                  <li>Python Entwicklung (Tkinter)</li>\n              </ul>\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" onClick={() => openInNewTab('https://www.linkedin.com/in/levin-gorgs/')} >\n            LinkedIn\n          </Button>\n        </CardActions>\n      </Card>\n      </div>\n      <div className='cv'>\n      </div>\n      <div className='cardEdu'>\n      <Card className={classesEdu.rootEdu}>\n        <CardActionArea>\n          <CardMedia\n            className={classesEdu.mediaEdu}\n            image={pic2}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Bildung\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              <ul className='auflistung'>\n                  <ul><b>Aktuell</b></ul>\n                  <li>Master @ Universiät Mannheim Economic Computer Science</li>\n                  <br></br>\n                  <ul><b>Bachelor of Science</b></ul>\n                  <li>Bachelor @ Hochschule Furtwangen Economic Computer Science</li>\n                  <br></br>\n                  <ul><b>Abitur</b></ul>\n                  <li>Wirtschaftsgymnasium Lörrach</li>\n              </ul>\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n      </div>\n      <div className='cv'>\n      </div>\n      <div className='cardProj'>\n      <Card className={classesProj.rootProj}>\n        <CardActionArea>\n          <CardMedia\n            className={classesProj.mediaProj}\n            image={pic3}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Projekte\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              <ul className='auflistung'>\n                  <ul><b>Aktuell</b></ul>\n                  <li>iReserve MERN Stack Application:</li>\n                  Eine Anwendung die eine flexible Planung eines Ortes zulässt. Nutzer Authentifizeren sich durch ein Login und greifen auf einen gemeinsamen Kalender zu. Hier können dann Termien gebucht werden, die jeweils von allen anderen Nutzern gesehen werden.\n                  <br></br>\n                  <br></br>\n                  <ul><b>React Hompage</b></ul>\n                  <li>Umfasst eine Seite auf der aktuelle sowie bisherige Projekte detailiert vorgestellt werden. Weiterhin wurde diese \"Aboute Me\" Seite implementiert.</li>\n                  <br></br>\n                  <ul><b>Fahrtkostechrechner (React)</b></ul>\n                  <li>Ermöglicht es Anwender die Kosten pro KM für eine Route zu berechnen. Die Route wird anschließend Grafisch dargestellt, sowie die Gesamntkosten angeben.</li>\n                  <br></br>\n                  <ul><b>Fahrtkostechrechner (Python Tkinter)</b></ul>\n                  <li>Prototyp des Fahrtkostenrechners, hier wurden die verschiedenen APIs implementiert und getestet. Weiterhin wurde eine UI mit Tkinter implementiert.</li>\n                  <br></br>\n                  <ul><b>Reishunger.de React-Native Anwendung</b></ul>\n                  <li>Entwicklung eines MVP für Reishunger.de, die Entwicklung fand im Rahmen eines Studierendenprojektes statt. Die Anwendung wird unter dem Reiter \"Projects\" näher vorgestellt.</li>\n              </ul>\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n      </div>\n      <div className='cardCom'>\n      <Card className={classesCom.rootCom}>\n        <CardActionArea>\n          <CardMedia\n            className={classesCom.mediaCom}\n            image={pic4}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Berufserfahrung\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              <ul className='auflistung'>\n                  <ul><b>Star Cooperation GmbH: Werkstudent Business Intelligence</b></ul>\n                  <li>PowerBI Berichtserstellung</li>\n                  <li>ETL Tasks</li>\n                  <li>Unterstützung bei Kundenprojekten</li>\n                  <br></br>\n                  <ul><b>Daimler AG: Praktikant Supply Chain Management</b></ul>\n                  <li>Priorisierung WLTP Fahrzeuge</li>\n                  <li>Unterstützung der WLTP Taksforce</li>\n                  <li>Analyse/Auswertung Bauteile/Baugruppen</li>\n                  <li>VBA Entwicklung</li>\n              </ul>\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n      </div>\n      </>\n    );\n  }","/home/levin/Documents/Entwicklung/hello-world/src/Components/pages/Projects.js",["42","43","44"],"import React from 'react'\nimport '/home/levin/Documents/Entwicklung/hello-world/src/Projects.css';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport pic1 from '/home/levin/Documents/Entwicklung/hello-world/src/homepage.jpg';\nimport pic2 from '/home/levin/Documents/Entwicklung/hello-world/src/android.jpg';\n\nconst useStylesReactP = makeStyles({\n        rootReactP: {\n          maxWidth: 1300,\n        },\n        mediaReactP: {\n          height: 420,\n        },\n      });\n      \n\nconst useStylesAP = makeStyles({\n        rootAP: {\n          maxWidth: 1300,\n        },\n        mediaAP: {\n          height: 420,\n        },\n      });\n\n      export default function MediaCard() {\n        const classesReactP = useStylesReactP();\n        const classesAP = useStylesAP();\n\n    return (\n        <>\n        <div className='cardReactP'>\n      <Card className={classesReactP.rootReactP}>\n        <CardActionArea>\n          <CardMedia\n            className={classesReactP.mediaReactP}\n            image={pic1}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              React Web Application\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              <ul className='auflistung'>\n                  <ul><b>Funktionsumfang</b></ul>\n                  <li>Übersicht über aktuelle Projekte</li>\n                  <li>Fahrtkostenrechner mit Kartendarstellung</li>\n                  <li>\"About Me\" Seite</li>\n                  <br></br>\n                  <ul><b>Komponenten</b></ul>\n                  <li>Basis: React</li>\n                  <li>UI Elemente: Material UI</li>\n                  <li>API: OpenCage Geocoder, Openrouteservice, Leaflet (Openstreetmap)</li>\n              </ul>\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n      </div>\n      <div className='cardAP'>\n      <Card className={classesAP.rootAP}>\n        <CardActionArea>\n          <CardMedia\n            className={classesAP.mediaAP}\n            image={pic2}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Android Application with Node.js Backend\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              <ul className='auflistung'>\n                  <ul><b>Funktionsumfang</b></ul>\n                  <li>Authentifizierungsprozess (Login/Logout)</li>\n                  <li>Kalender erstellen</li>\n                  <li>Eingeloggte Nutzer können Termine eines gewählten Kalenders ansehen</li>\n                  <li>Eingeloggte Nutzer können Termine zu innerhalb eines Kalenders erstellen</li>\n                  <br></br>\n                  <ul><b>Komponenten</b></ul>\n                  <li>Android Anwendung (Java)</li>\n                  <li>Backend (Node.js)</li>\n                  <li>UI: Material UI</li>\n              </ul>\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n      </div>\n      </>\n    )\n}\n\n","/home/levin/Documents/Entwicklung/hello-world/src/Components/pages/Fahrtkostenrechner.js",["45","46","47","48","49","50","51"],"import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport '/home/levin/Documents/Entwicklung/hello-world/src/Fahrtkostenrechner.css';\nimport axios from 'axios';\nimport { Button, TextField } from '@material-ui/core';\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet-routing-machine\";\nimport { render } from \"@testing-library/react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst initial_state = {\n  startAdresse: '',\n  zielAdresse: '',\n  costKM: '',\n  startlat: '',\n  startlng: '',\n  ziellat: '',\n  ziellng: '',\n  renderList: null,\n  route: []\n};\n\nconst SearchMealForm = ({ onFormSubmit = () => { } }) => {\n  const [state, setState] = useState(initial_state);\n  //handle user input and inject it into yelp api get request\n  const handleSubmit = async event => {\n    event.preventDefault();\n    onFormSubmit(state);\n    const searchLatLngstart = await searchYelpRestaurants({ startAdresse, zielAdresse, costKM });\n    setState({ ...state, searchLatLngstart, searchLatLngziel, costKM });\n  };\n\n  const handleChange = event => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value\n    });\n    console.log(startAdresse);\n    console.log(zielAdresse);\n    console.log(costKM);\n  };\n\n  \n  function searchYelpRestaurants(){\n    try {\n      const xy = axios.get(\n        `https://api.opencagedata.com/geocode/v1/json?q=${startAdresse}&key=6bd072af2b394258b70cb1923811cf25`)\n        .then((responsestart) => {\n          let searchLatLngstart = responsestart;\n          //returns start latitude \n          let startlat = searchLatLngstart.data.results[0].bounds.northeast.lat;\n          let startlng = searchLatLngstart.data.results[0].bounds.northeast.lng;\n          console.log(startlat);\n          console.log(startlng);\n\n          const xx = axios.get(\n            `https://api.opencagedata.com/geocode/v1/json?q=${zielAdresse}&key=6bd072af2b394258b70cb1923811cf25`)\n            .then((responseziel) => {\n              let searchLatLngziel = responseziel;\n              let ziellat = searchLatLngziel.data.results[0].bounds.northeast.lat;\n              let ziellng = searchLatLngziel.data.results[0].bounds.northeast.lng;\n              console.log(ziellat);\n              console.log(ziellng);\n\n              const yy = axios.get(\n                `https://api.openrouteservice.org/v2/directions/driving-car?api_key=5b3ce3597851110001cf6248cf56f374d7f14bdba928b87f5caece16&start=${startlng},${startlat}&end=${ziellng},${ziellat}`)\n                .then((responseroute) => {\n                  console.log(responseroute);\n                  let distance = responseroute.data.features[0].properties.summary.distance;\n                  let distancekm = distance / 1000;\n                  console.log(distancekm);\n                  let cost = distancekm * costKM;\n                  console.log(cost);\n                  const positionstart =[startlat,startlng];\n                  const positionziel = [ziellat, ziellng];\n                  render(\n                    <React.Fragment>\n                      <div id=\"map\" className=\"map\">\n                        <MapContainer\n                          center={positionstart}\n                          zoom={12}\n                          maxZoom={18}\n                        >\n                          <TileLayer\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                          />\n                           <Marker position={positionstart}>\n                            <Popup>\n                             {startAdresse}\n                             </Popup>\n                            </Marker>\n                            <Marker position={positionziel}>\n                            <Popup>\n                             {zielAdresse}\n                             </Popup>\n                            </Marker>\n                        </MapContainer>\n                      </div>\n                      <div className='userOut'>\n                        <Card>\n                          <CardContent>\n                            <Typography  color=\"textSecondary\" gutterBottom>\n                              <b>Fahrkosten</b>\n                             </Typography>\n                            <Typography variant=\"h5\" component=\"h2\">\n                             </Typography>\n                            <Typography  color=\"textSecondary\">\n                              für die Strecke {startAdresse} <br />nach {zielAdresse}\n                           </Typography>\n                            <Typography variant=\"body2\" component=\"p\">\n                               <br />\n                              <b>{cost} €</b>\n                            </Typography>\n                          </CardContent>\n                        </Card>\n                      </div>\n                    </React.Fragment>\n                  )\n                });\n            });\n        });\n    }\n    catch (err) {\n      console.log(err);\n    }\n  };\n\n\n  const { startAdresse, zielAdresse, costKM, searchLatLngstart, searchLatLngziel } = state;\n  //const position = [this.state.startlat, this.state.startlng];\n  //show points on the Map\n  let myIcon = L.icon({\n    iconUrl: '',\n    iconSize: [15],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [0, -41]\n  });\n\n\n  return (\n    <React.Fragment>\n      <Form onSubmit={handleSubmit}>\n        <div>\n          <div className='userinputstart'>\n            <TextField\n              name='startAdresse'\n              type='text'\n              value={startAdresse}\n              onChange={handleChange}\n              label=\"Start Adresse\"\n              variant='outlined' />\n          </div>\n          <div className='userinputziel'>\n            <TextField\n              name='zielAdresse'\n              type='text'\n              variant='outlined'\n              label=\"Ziel Adresse\"\n              value={zielAdresse}\n              onChange={handleChange} />\n              </div>\n              <div className='costKM'>\n               <TextField\n              name='costKM'\n              type='text'\n              variant='outlined'\n              label=\"Kosten pro Kilometer\"\n              value={costKM}\n              onChange={handleChange} />\n              </div>\n          <div className='userinputbutton'>\n            <label>\n              <Button type=\"submit\" variant='contained' color='primary'>Submit</Button>\n            </label>\n          </div>\n        </div>\n        <div className='userOutput'>\n        </div>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default SearchMealForm;\n",{"ruleId":"52","severity":1,"message":"53","line":3,"column":22,"nodeType":"54","messageId":"55","endLine":3,"endColumn":32},{"ruleId":"52","severity":1,"message":"53","line":3,"column":22,"nodeType":"54","messageId":"55","endLine":3,"endColumn":32},{"ruleId":"52","severity":1,"message":"56","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":19},{"ruleId":"52","severity":1,"message":"57","line":9,"column":8,"nodeType":"54","messageId":"55","endLine":9,"endColumn":14},{"ruleId":"52","severity":1,"message":"58","line":10,"column":10,"nodeType":"54","messageId":"55","endLine":10,"endColumn":20},{"ruleId":"52","severity":1,"message":"56","line":12,"column":8,"nodeType":"54","messageId":"55","endLine":12,"endColumn":19},{"ruleId":"52","severity":1,"message":"59","line":51,"column":13,"nodeType":"54","messageId":"55","endLine":51,"endColumn":15},{"ruleId":"52","severity":1,"message":"60","line":61,"column":17,"nodeType":"54","messageId":"55","endLine":61,"endColumn":19},{"ruleId":"52","severity":1,"message":"61","line":70,"column":21,"nodeType":"54","messageId":"55","endLine":70,"endColumn":23},{"ruleId":"52","severity":1,"message":"62","line":135,"column":46,"nodeType":"54","messageId":"55","endLine":135,"endColumn":63},{"ruleId":"52","severity":1,"message":"63","line":138,"column":7,"nodeType":"54","messageId":"55","endLine":138,"endColumn":13},"no-unused-vars","'withStyles' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'Button' is defined but never used.","'makeStyles' is defined but never used.","'xy' is assigned a value but never used.","'xx' is assigned a value but never used.","'yy' is assigned a value but never used.","'searchLatLngstart' is assigned a value but never used.","'myIcon' is assigned a value but never used."]